[{"D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\Loginform\\LoginForm.js":"1","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\App.js":"2","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\Signupform\\SignupForm.js":"3","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\CallText\\Calltext.js":"4","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\Header\\Header.js":"5","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\reportWebVitals.js":"6","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\index.js":"7"},{"size":6058,"mtime":1608597983190,"results":"8","hashOfConfig":"9"},{"size":2212,"mtime":1608597644131,"results":"10","hashOfConfig":"9"},{"size":10918,"mtime":1608586826871,"results":"11","hashOfConfig":"9"},{"size":1065,"mtime":1608581594183,"results":"12","hashOfConfig":"9"},{"size":4390,"mtime":1608533834448,"results":"13","hashOfConfig":"9"},{"size":362,"mtime":1608186392024,"results":"14","hashOfConfig":"9"},{"size":554,"mtime":1608591851853,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"g3o8xq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\Loginform\\LoginForm.js",["32","33","34","35","36","37","38","39"],"import React from \"react\";\r\nimport {\r\n    Form,\r\n    Button,\r\n    Col,\r\n    Row,\r\n    Container,\r\n    InputGroup,\r\n    useState,\r\n} from \"react-bootstrap\";\r\nimport { PersonFill, KeyFill, PersonCircle } from \"react-bootstrap-icons\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport \"./Loginform.css\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default function LoginForm() {\r\n    const [usernameOrEmail, setusernameOrEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [loggedIn, setLogin] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (event) => {\r\n        try {\r\n            axios\r\n                .get(\"https://ponk-backend.herokuapp.com/checkuser\", {\r\n                    params: {\r\n                        usernameOrEmail: usernameOrEmail,\r\n                        password: password,\r\n                    },\r\n                })\r\n                .then(function (response) {\r\n                    if (response.request.status == 200) {\r\n                        console.log(\"cock and balls\");\r\n                        history.push(\"/dashboard\");\r\n                    }\r\n                });\r\n        } catch (err) {\r\n            alert(\"THAT THANG BLEEDING p\");\r\n        }\r\n        setusernameOrEmail(\"\");\r\n        setPassword(\"\");\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginDiv\">\r\n            <Switch>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <Form className=\"loginForm\" onSubmit={handleSubmit}>\r\n                                <h1 className=\"loginText\">Login</h1>\r\n                                <Row>\r\n                                    <Col xs={{ span: 10, offset: 1 }}>\r\n                                        <Form.Group controlId=\"formBasicEmail\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text>\r\n                                                        <PersonCircle />\r\n                                                    </InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control\r\n                                                    value={usernameOrEmail}\r\n                                                    name=\"usernameOrEmail\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Username or email\"\r\n                                                    onChange={(e) =>\r\n                                                        setusernameOrEmail(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    required\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={{ span: 10, offset: 1 }}>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text>\r\n                                                        <KeyFill />\r\n                                                    </InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control\r\n                                                    name=\"password\"\r\n                                                    value={password}\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    onChange={(e) =>\r\n                                                        setPassword(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    required\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={{ span: 10, offset: 1 }}>\r\n                                        <Form.Group\r\n                                            style={{ alignItems: \"center\" }}\r\n                                        >\r\n                                            <Button\r\n                                                block\r\n                                                className=\"loginButton\"\r\n                                                variant=\"primary\"\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\App.js",["40","41","42"],"D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\Signupform\\SignupForm.js",["43","44"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Col, Row, Container, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n    PersonFill,\r\n    Person,\r\n    KeyFill,\r\n    EnvelopeFill,\r\n    Key,\r\n    PersonCircle,\r\n} from \"react-bootstrap-icons\";\r\nimport \"./Signupform.css\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default function SignupForm() {\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [firstName, setFirstName] = React.useState(\"\");\r\n    const [lastName, setLastName] = React.useState(\"\");\r\n    const [password2, setPassword2] = React.useState(\"\");\r\n\r\n    const handleSubmit = (event) => {\r\n        if (password == password2) {\r\n            axios\r\n                .post(\"https:ponk-backend.herokuapp.com/createuser\", {\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    username: username,\r\n                    email: email,\r\n                    password: password,\r\n                })\r\n                .then(function (response) {\r\n                    console.log(response.request.status);\r\n                });\r\n        } else {\r\n            alert(\"Passwords do not match\");\r\n        }\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setPassword2(\"\");\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n        setUsername(\"\");\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col sm={12}>\r\n                        <Form className=\"signupForm\" onSubmit={handleSubmit}>\r\n                            <h1 className=\"signupText\">SignUp</h1>\r\n                            <Row>\r\n                                <Col xs={{ span: 10, offset: 1 }}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>\r\n                                                    <Person />\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                value={firstName}\r\n                                                name=\"firstName\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"First Name\"\r\n                                                onChange={(e) =>\r\n                                                    setFirstName(e.target.value)\r\n                                                }\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={{ span: 10, offset: 1 }}>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>\r\n                                                    <PersonFill />\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                name=\"lastName\"\r\n                                                value={lastName}\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                                onChange={(e) =>\r\n                                                    setLastName(e.target.value)\r\n                                                }\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={{ span: 10, offset: 1 }}>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>\r\n                                                    <EnvelopeFill />\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                name=\"email\"\r\n                                                value={email}\r\n                                                type=\"email\"\r\n                                                placeholder=\"Email\"\r\n                                                onChange={(e) =>\r\n                                                    setEmail(e.target.value)\r\n                                                }\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={{ span: 10, offset: 1 }}>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>\r\n                                                    <PersonCircle />\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                name=\"username\"\r\n                                                value={username}\r\n                                                type=\"text\"\r\n                                                placeholder=\"Username\"\r\n                                                onChange={(e) =>\r\n                                                    setUsername(e.target.value)\r\n                                                }\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={{ span: 10, offset: 1 }}>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>\r\n                                                    <Key />\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                name=\"password\"\r\n                                                value={password}\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                onChange={(e) =>\r\n                                                    setPassword(e.target.value)\r\n                                                }\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={{ span: 10, offset: 1 }}>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>\r\n                                                    <KeyFill />\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                name=\"password2\"\r\n                                                value={password2}\r\n                                                type=\"password\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                onChange={(e) =>\r\n                                                    setPassword2(e.target.value)\r\n                                                }\r\n                                                required\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={{ span: 10, offset: 1 }}>\r\n                                    <Form.Group>\r\n                                        <Button\r\n                                            block\r\n                                            className=\"signupButton\"\r\n                                            variant=\"primary\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\CallText\\Calltext.js",[],"D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\components\\Header\\Header.js",["45"],"D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\reportWebVitals.js",[],"D:\\ProgrammingProjects\\ponk-frontend\\ponk-frontend\\src\\index.js",[],{"ruleId":"46","severity":1,"message":"47","line":9,"column":5,"nodeType":"48","messageId":"49","endLine":9,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":11,"column":10,"nodeType":"48","messageId":"49","endLine":11,"endColumn":20},{"ruleId":"46","severity":1,"message":"51","line":13,"column":22,"nodeType":"48","messageId":"49","endLine":13,"endColumn":28},{"ruleId":"46","severity":1,"message":"52","line":15,"column":5,"nodeType":"48","messageId":"49","endLine":15,"endColumn":10},{"ruleId":"46","severity":1,"message":"53","line":16,"column":5,"nodeType":"48","messageId":"49","endLine":16,"endColumn":13},{"ruleId":"46","severity":1,"message":"54","line":25,"column":12,"nodeType":"48","messageId":"49","endLine":25,"endColumn":20},{"ruleId":"46","severity":1,"message":"55","line":25,"column":22,"nodeType":"48","messageId":"49","endLine":25,"endColumn":30},{"ruleId":"56","severity":1,"message":"57","line":38,"column":49,"nodeType":"58","messageId":"59","endLine":38,"endColumn":51},{"ruleId":"46","severity":1,"message":"60","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":14},{"ruleId":"46","severity":1,"message":"61","line":3,"column":16,"nodeType":"48","messageId":"49","endLine":3,"endColumn":22},{"ruleId":"46","severity":1,"message":"51","line":4,"column":27,"nodeType":"48","messageId":"49","endLine":4,"endColumn":33},{"ruleId":"46","severity":1,"message":"62","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":23,"column":22,"nodeType":"58","messageId":"59","endLine":23,"endColumn":24},{"ruleId":"46","severity":1,"message":"63","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":11},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'PersonFill' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","'Nav' is defined but never used."]